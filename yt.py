import os
import time
import json
import telebot
from telebot import types
import yt_dlp

bot = telebot.TeleBot('7749883296:AAE9ndo4NxzT2xX-TO9RRM4A5eDT8fvqrKQ')

import firebase_admin
from firebase_admin import credentials, db

def read_firebase_json(path: str, search_value=None):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ
    if not firebase_admin._apps:
        cred = credentials.Certificate("serviceAccountKey.json")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∫–ª—é—á—É
        firebase_admin.initialize_app(cred, {
            "databaseURL": "https://downloader-19e7e-default-rtdb.firebaseio.com/"  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        })
    
    ref = db.reference(path)  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    data = ref.get()  # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    
    if search_value:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö
        exists = any(str(value) == str(search_value) for value in data.values()) if isinstance(data, dict) else False
        return exists
    
    return data  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π


def append_firebase_json(path: str, data):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ
    if not firebase_admin._apps:
        cred = credentials.Certificate("serviceAccountKey.json")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∫–ª—é—á—É
        firebase_admin.initialize_app(cred, {
            "databaseURL": "https://downloader-19e7e-default-rtdb.firebaseio.com/"  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        })
    
    ref = db.reference(path)  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    ref.push(data)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫

def is_donator(chat_id, filename="users.json"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–Ω–∞—Ç–æ—Ä–æ–º"""
    try:
        with open(filename, 'r') as f:
            donators = json.load(f)
        return str(chat_id) in donators  # chat_id —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
    except (FileNotFoundError, json.JSONDecodeError):
        return False  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π, –Ω–∏–∫—Ç–æ –Ω–µ –¥–æ–Ω–∞—Ç–æ—Ä

def downloader(file_name: str, url: str, settings: list = None):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å YouTube —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
    ydl_opts = {
            'outtmpl': f'{file_name}.%(ext)s',
            'merge_output_format': 'mp4',
            'postprocessors': [{'key': 'FFmpegVideoConvertor', 'preferedformat': 'mp4'}],
        }

    if settings:
        for setting in settings:
            if '=' in setting:
                key, value = setting.split('=', 1)
                ydl_opts[key] = value
            else:
                ydl_opts[setting] = True  # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–ª–∞–≥ (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏—è)

    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            return ydl.prepare_filename(info)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ—á–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id == 1354551468:
        print('sfasfasf')
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        markup.add("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", "–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç", '–î–ª—è –∞–¥–º–∏–Ω–∞')
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)
    else:
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        markup.add("–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", "–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

    user = read_firebase_json('users', message.chat.id)
    if user == False:
        append_firebase_json('users', message.chat.id)
        

@bot.message_handler(func=lambda message: message.text == "–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")
def request_video_link(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º", callback_data="default"),
        types.InlineKeyboardButton("*–ò–¥—É—Ç —Ä–∞–±–æ—Ç—ã*", callback_data="sasf"),
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–î–ª—è –∞–¥–º–∏–Ω–∞' and message.chat.id == 1354551468)
def admin_menu(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–°–¥–µ–ª–∞—Ç—å –ø–æ—Å—Ç", callback_data="post"),
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ["default", "donate"])
def callback_handler(call):
    chat_id = call.message.chat.id
    if call.data == "default":
        bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.")
        bot.register_next_step_handler(call.message, download_video)
    elif call.data == "donate":
        if is_donator(chat_id):
            bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (–¥–æ–Ω–∞—Ç —Ä–µ–∂–∏–º).")
            bot.register_next_step_handler(call.message, download_video_donate)
        else:
            bot.answer_callback_query(call.id, "‚ùå –í—ã –Ω–µ –¥–æ–Ω–∞—Ç–µ—Ä!", show_alert=True)

@bot.callback_query_handler(func=lambda call: call.data == 'post')
def request_post_content(call):
    bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")
    bot.register_next_step_handler(call.message, send_post_to_users)

def send_post_to_users(message):
    users = read_firebase_json('users')  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Firebase
    
    if not users:
        bot.send_message(message.chat.id, "‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")
        return
    
    if message.content_type == 'text':
        for user_id in users.values():
            bot.send_message(user_id, message.text)

    elif message.content_type == 'photo':
        file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        caption = message.caption if message.caption else ""
        for user_id in users.values():
            bot.send_photo(user_id, file_id, caption=caption)

    elif message.content_type == 'video':   
        file_id = message.video.file_id
        caption = message.caption if message.caption else ""
        for user_id in users.values():
            bot.send_video(user_id, file_id, caption=caption)
    
    bot.send_message(message.chat.id, "‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ—Å–ª–∞–Ω!")


def download_video(message):
    url = message.text
    chat_id = message.chat.id
    file_name = f"video_{chat_id}_{int(time.time())}"

    clocks = bot.send_message(chat_id, '‚è≥')

    video_path = downloader(file_name, url, settings=["format=best", "ffmpeg-opts=-b:v 1000k"])

    if video_path and os.path.exists(video_path):
        with open(video_path, 'rb') as video:
            bot.send_video(chat_id, video)
        os.remove(video_path)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")

    bot.delete_message(chat_id, clocks.message_id)

def download_video_donate(message):
    url = message.text
    chat_id = message.chat.id
    file_name = f"donate_video_{chat_id}_{int(time.time())}"

    downloading_msg = bot.send_message(chat_id, 'üíé –°–∫–∞—á–∏–≤–∞–µ–º –≤ –¥–æ–Ω–∞—Ç-—Ä–µ–∂–∏–º–µ...')

    video_path = downloader(file_name, url, settings=["format=bestvideo+bestaudio"])

    if video_path and os.path.exists(video_path):
        with open(video_path, 'rb') as video:
            bot.send_video(chat_id, video)
        os.remove(video_path)
    else:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")

    bot.delete_message(chat_id, downloading_msg.message_id)

def add_donator(chat_id, filename="users.json"):
    """–î–æ–±–∞–≤–ª—è–µ—Ç chat_id –≤ —Ñ–∞–π–ª users.json"""
    try:
        with open(filename, 'r') as f:
            donators = json.load(f)
        
        if not isinstance(donators, list):
            donators = []  # –ï—Å–ª–∏ –Ω–µ —Å–ø–∏—Å–æ–∫, –∑–∞–º–µ–Ω—è–µ–º –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º
    except (FileNotFoundError, json.JSONDecodeError):
        donators = []  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫

    if str(chat_id) not in donators:
        donators.append(str(chat_id))
        with open(filename, 'w') as f:
            json.dump(donators, f, indent=4)
        return f"‚úÖ ID {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –¥–æ–Ω–∞—Ç–æ—Ä–æ–≤!"
    else:
        return f"‚ö†Ô∏è ID {chat_id} —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ."
    
@bot.message_handler(func=lambda message: message.text == "–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç")
def nothing(message):
    bot.send_message(message.chat.id, '–¢—É—Ç —Ä–∏–ª –Ω–∏—á–µ–≥–æ –Ω–µ—Ç')

bot.polling(non_stop=True)
